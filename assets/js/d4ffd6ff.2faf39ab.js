"use strict";(self.webpackChunkblazorbootstrap=self.webpackChunkblazorbootstrap||[]).push([[181],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),f=c(t),m=r,u=f["".concat(s,".").concat(m)]||f[m]||p[m]||o;return t?a.createElement(u,l(l({ref:n},d),{},{components:t})):a.createElement(u,l({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=f;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},8296:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return f}});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),l=["components"],i={sidebar_label:"Offcanvas",sidebar_position:4},s="Offcanvas",c={unversionedId:"components/offcanvas",id:"components/offcanvas",isDocsHomePage:!1,title:"Offcanvas",description:"Documentation and examples for BlazorBootstrap Offcanvas.",source:"@site/docs/components/offcanvas.md",sourceDirName:"components",slug:"/components/offcanvas",permalink:"/docs/components/offcanvas",editUrl:"https://github.com/vikramlearning/blazorbootstrap/edit/master/docs/docs/components/offcanvas.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Offcanvas",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Modal",permalink:"/docs/components/modal"},next:{title:"Toasts",permalink:"/docs/components/toasts"}},d=[{value:"Parameters",id:"parameters",children:[],level:2},{value:"Methods",id:"methods",children:[],level:2},{value:"Callback Events",id:"callback-events",children:[],level:2},{value:"Examples",id:"examples",children:[{value:"Offcanvas",id:"offcanvas-1",children:[],level:3},{value:"Callback Events",id:"callback-events-1",children:[],level:3}],level:2},{value:"Articles",id:"articles",children:[],level:2}],p={toc:d};function f(e){var n=e.components,t=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"offcanvas"},"Offcanvas"),(0,o.kt)("p",null,"Documentation and examples for BlazorBootstrap Offcanvas."),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Descritpion"),(0,o.kt)("th",{parentName:"tr",align:null},"Required"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ChildContent"),(0,o.kt)("td",{parentName:"tr",align:null},"RenderFragment"),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies the content to be rendered inside this."),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Placement"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Placement")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets or sets the offcanvas placement. By default, offcanvas is placed on the right of the viewport."),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Placement.End"))))),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Method"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ShowAsync"),(0,o.kt)("td",{parentName:"tr",align:null},"Shows an offcanvas element. Returns to the caller before the offcanvas element has actually been shown (i.e. before the ",(0,o.kt)("inlineCode",{parentName:"td"},"OnShown")," event occurs).")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"HideAsync"),(0,o.kt)("td",{parentName:"tr",align:null},"Hides an offcanvas element. Returns to the caller before the offcanvas element has actually been hidden (i.e. before the ",(0,o.kt)("inlineCode",{parentName:"td"},"OnHidden")," event occurs).")))),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Asynchronous methods and transitions")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"All API methods are ",(0,o.kt)("strong",{parentName:"p"},"asynchronous")," and start a ",(0,o.kt)("strong",{parentName:"p"},"transition"),". They return to the caller as soon as the transition is started but ",(0,o.kt)("strong",{parentName:"p"},"before it ends"),". In addition, a method call on a ",(0,o.kt)("strong",{parentName:"p"},"transitioning component will be ignored"),"."))),(0,o.kt)("h2",{id:"callback-events"},"Callback Events"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Event"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"OnShowing"),(0,o.kt)("td",{parentName:"tr",align:null},"This event fires immediately when the show instance method is called.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"OnShown"),(0,o.kt)("td",{parentName:"tr",align:null},"This event is fired when an offcanvas element has been made visible to the user (will wait for CSS transitions to complete).")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"OnHiding"),(0,o.kt)("td",{parentName:"tr",align:null},"This event is fired immediately when the hide method has been called.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"OnHidden"),(0,o.kt)("td",{parentName:"tr",align:null},"This event is fired when an offcanvas element has been hidden from the user (will wait for CSS transitions to complete).")))),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"offcanvas-1"},"Offcanvas"),(0,o.kt)("img",{src:"https://i.imgur.com/J1mcowH.jpg",alt:"BlazorBootstrap: Offcanvas Component"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cshtml"},'<Button Color="ButtonColor.Primary" @onclick="(async () => { await ShowOffcanvasAsync(); })">Show Offcanvas</Button>\n\n<Offcanvas @ref="offcanvas">\n  ... design your header and body\n</Offcanvas>\n\n### Methods\n\n```cs {6,11}\n@code {\n    private Offcanvas offcanvas;\n\n    private async Task ShowOffcanvasAsync()\n    {\n        await offcanvas?.ShowAsync();\n    }\n\n    private async Task HideOffcanvasAsync()\n    {\n        await offcanvas?.HideAsync();\n    }\n}\n')),(0,o.kt)("h3",{id:"callback-events-1"},"Callback Events"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cshtml"},'<Offcanvas @ref="offcanvas"\n           OnShowing="OnOffcanvasShowingAsync"\n           OnShown="OnOffcanvasShownAsync"\n           OnHiding="OnOffcanvasHidingAsync"\n           OnHidden="OnOffcanvasHiddenAsync">\n\n    ... add offcanvas header and body\n\n</Offcanvas>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},'@code {\n    private Offcanvas offcanvas;\n\n    private async Task OnOffcanvasShowingAsync()\n    {\n        await Task.Run(() => { Console.WriteLine("Event: Showing"); });\n    }\n\n    private async Task OnOffcanvasShownAsync()\n    {\n        await Task.Run(() => { Console.WriteLine("Event: Shown"); });\n    }\n\n    private async Task OnOffcanvasHidingAsync()\n    {\n        await Task.Run(() => { Console.WriteLine("Event: Hiding"); });\n    }\n\n    private async Task OnOffcanvasHiddenAsync()\n    {\n        await Task.Run(() => { Console.WriteLine("Event: Hidden"); });\n    }\n}\n')),(0,o.kt)("h2",{id:"articles"},"Articles"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://vikramlearning.com/dotnet/article/blazor-bootstrap-offcanvas-examples/88/153"},"Blazor Bootstrap: Offcanvas examples"))))}f.isMDXComponent=!0}}]);